Realm数据库使用介绍:
        具体事例参照 NewsDetailActivity

        // 将你的数据实体继承 RealmObject
        public class Dog extends RealmObject {
            private String name;
            private int age;

            // ... Generated getters and setters ...
        }

        public class Person extends RealmObject {
            @PrimaryKey
            private long id;
            private String name;
            private RealmList<Dog> dogs; // Declare one-to-many relationships

            // ... Generated getters and setters ...
        }

        // 像java实体对象一样使用它们
        Dog dog = new Dog();
        dog.setName("Rex");
        dog.setAge(1);

        // 初始化数据库 在application oncreat 方法中
        Realm.init(context);

        //获取此线程的Realm实例
        Realm realm = Realm.getDefaultInstance();

        // 按条件查询数据,例如当前是 查询当前所有2岁以下的狗的数据
        final RealmResults<Dog> puppies = realm.where(Dog.class).lessThan("age", 2).findAll();
        puppies.size(); // => 0 because no dogs have been added to the Realm yet

        // 将数据保存在事务中
        realm.beginTransaction();
        final Dog managedDog = realm.copyToRealm(dog); // Persist unmanaged objects
        Person person = realm.createObject(Person.class); // Create managed objects directly
        person.getDogs().add(managedDog);
        realm.commitTransaction();

        // 当数据改变时候,可以使用此方法去监听
        puppies.addChangeListener(new OrderedRealmCollectionChangeListener<RealmResults<Dog>>() {
            @Override
            public void onChange(RealmResults<Dog> results, OrderedCollectionChangeSet changeSet) {
                // Query results are updated in real time with fine grained notifications.
                changeSet.getInsertions(); // => [0] is added.
            }
        });

        //  在子线程里异步更新一个实体数据
        realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm bgRealm) {
                Dog dog = bgRealm.where(Dog.class).equalTo("age", 1).findFirst();
                dog.setAge(3);
            }
        }, new Realm.Transaction.OnSuccess() {
            @Override
            public void onSuccess() {
                // Original queries and Realm objects are automatically updated.
                puppies.size(); // => 0 because there are no more puppies younger than 2 years old
                managedDog.getAge();   // => 3 the dogs age is updated
            }
        });